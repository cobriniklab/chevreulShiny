[{"path":"https://cobriniklab.github.io/chevreulShiny/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to chevreul","title":"Contributing to chevreul","text":"outlines propose change chevreul. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to chevreul","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to chevreul","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to chevreul","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"cobriniklab/chevreul\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to chevreul","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to chevreul","text":"Please note chevreulShiny project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 chevreulShiny authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with chevreul","title":"Getting help with chevreul","text":"Thank using chevreul! filing issue, things know make process smooth possible parties.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with chevreul","text":"Start making minimally reproducible example, also known ‘reprex’. may use reprex R package create one, though necessary help. make R-question-asking endeavors easier. Learning use takes 5 10 minutes. tips make minimally reproducible example, see StackOverflow link.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/SUPPORT.html","id":"where-to-post-it","dir":"","previous_headings":"","what":"Where to post it?","title":"Getting help with chevreul","text":"Bioconductor help web page gives overview places may help answer question. Bioconductor software related questions, bug reports feature requests, addressed appropriate Bioconductor/chevreul GitHub repository. Follow bug report feature request templates GitHub. package GitHub repository, see next bullet point. Bioconductor software usage questions addressed Bioconductor Support Website. Make sure use appropriate package tag, otherwise package authors get notification. General R questions can posed StackOverflow RStudio Community website especially pertain tidyverse RStudio GUI related products.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/SUPPORT.html","id":"issues-or-feature-requests","dir":"","previous_headings":"","what":"Issues or Feature Requests","title":"Getting help with chevreul","text":"opening new issue feature request, sure search issues pull requests ensure one already exist implemented development version. Note. can remove :open search term issues page search open closed issues. See link learn modifying search.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with chevreul","text":"Bioconductor maintainers limited resources strive responsive possible. Please forget tag appropriate maintainer issue GitHub username (e.g., @username). order make easy possible Bioconductor core developers remediate issue. Provide accurate, brief, reproducible report outlined issue templates. Thank trusting Bioconductor.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/chevreulShiny.html","id":"install-chevreulshiny","dir":"Articles","previous_headings":"Basics","what":"Install chevreulShiny","title":"chevreulShiny","text":"R open-source statistical environment can easily modified enhance functionality via packages. chevreulShiny R package available via Bioconductor repository packages. R can installed operating system CRAN can install chevreulShiny using following commands R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"chevreulShiny\")"},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/chevreulShiny.html","id":"required-knowledge","dir":"Articles","previous_headings":"Basics","what":"Required knowledge","title":"chevreulShiny","text":"chevreulShiny package designed single-cell RNA sequencing data. functions included within package derived packages implemented infrastructure needed RNA-seq data processing analysis. Packages instrumental development chevreulShiny include, Biocpkg(\"SummarizedExperiment\") Biocpkg(\"scater\").","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/chevreulShiny.html","id":"asking-for-help","dir":"Articles","previous_headings":"Basics","what":"Asking for help","title":"chevreulShiny","text":"R Bioconductor steep learning curve critical learn ask help. Bioconductor support site main resource getting help: remember use chevreulShiny tag check older posts.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/chevreulShiny.html","id":"quick-start-to-using-chevreulshiny","dir":"Articles","previous_headings":"","what":"Quick start to using chevreulShiny","title":"chevreulShiny","text":"chevreulShiny package contains functions preprocess, cluster, visualize, perform analyses scRNA-seq data. also contains shiny app easy visualization analysis scRNA data. chvereul uses SingelCellExperiment (SCE) object type (SingleCellExperiment) store expression metadata single-cell experiments. package features functions capable : Performing Clustering range resolutions Dimensional reduction Raw Sequencing Data. Visualizing scRNA data using different plotting functions. Integration multiple datasets consistent analyses. Cell cycle state regression labeling.","code":"library(\"chevreulShiny\")"},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/chevreulShiny.html","id":"shiny-app","dir":"Articles","previous_headings":"Quick start to using chevreulShiny","what":"Shiny app","title":"chevreulShiny","text":"chevreulShiny includes shiny app exploratory scRNA data analysis visualization can accessed via Note: SCE object must pre-processed integrated (required) prior building shiny app. app arranged different sections performs different function. information individual sections app provided within “shiny app” vignette. R session information.","code":"minimalChevreulApp(small_example_sce) #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.3 (2025-02-28) #>  os       Ubuntu 24.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2025-04-01 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  quarto   NA #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package              * version   date (UTC) lib source #>  abind                  1.4-8     2024-09-12 [1] RSPM #>  alabaster.base         1.6.1     2024-11-10 [1] Bioconduc~ #>  alabaster.schemas      1.6.0     2024-10-29 [1] Bioconduc~ #>  AnnotationDbi          1.68.0    2024-10-29 [1] Bioconduc~ #>  AnnotationFilter       1.30.0    2024-10-29 [1] Bioconduc~ #>  batchelor              1.22.0    2024-10-29 [1] Bioconduc~ #>  beachmat               2.22.0    2024-10-29 [1] Bioconduc~ #>  beeswarm               0.4.0     2021-06-01 [1] RSPM #>  Biobase              * 2.66.0    2024-10-29 [1] Bioconduc~ #>  BiocGenerics         * 0.52.0    2024-10-29 [1] Bioconduc~ #>  BiocIO                 1.16.0    2024-10-29 [1] Bioconduc~ #>  BiocManager            1.30.25   2024-08-28 [1] RSPM #>  BiocNeighbors          2.0.1     2024-11-28 [1] Bioconduc~ #>  BiocParallel           1.40.0    2024-10-29 [1] Bioconduc~ #>  BiocSingular           1.22.0    2024-10-29 [1] Bioconduc~ #>  BiocStyle            * 2.34.0    2024-10-29 [1] Bioconduc~ #>  Biostrings             2.74.1    2024-12-16 [1] Bioconduc~ #>  bit                    4.6.0     2025-03-06 [1] RSPM #>  bit64                  4.6.0-1   2025-01-16 [1] RSPM #>  bitops                 1.0-9     2024-10-03 [1] RSPM #>  blob                   1.2.4     2023-03-17 [1] RSPM #>  bluster                1.16.0    2024-10-29 [1] Bioconduc~ #>  bookdown               0.42      2025-01-07 [1] RSPM #>  bslib                  0.9.0     2025-01-30 [1] RSPM #>  cachem                 1.1.0     2024-05-16 [1] RSPM #>  chevreulPlot         * 0.99.27   2025-04-01 [1] Github (cobriniklab/chevreulPlot@334e62f) #>  chevreulProcess      * 0.99.23   2025-04-01 [1] Github (cobriniklab/chevreulProcess@89e0cde) #>  chevreulShiny        * 0.99.26   2025-04-01 [1] local #>  circlize               0.4.16    2024-02-20 [1] RSPM #>  cli                    3.6.4     2025-02-13 [1] RSPM #>  clue                   0.3-66    2024-11-13 [1] RSPM #>  cluster                2.1.8     2024-12-11 [3] CRAN (R 4.4.3) #>  clustree             * 0.5.1     2023-11-05 [1] RSPM #>  cmdfun                 1.0.2     2020-10-10 [1] RSPM #>  codetools              0.2-20    2024-03-31 [3] CRAN (R 4.4.3) #>  colorspace             2.1-1     2024-07-26 [1] RSPM #>  ComplexHeatmap         2.22.0    2024-10-29 [1] Bioconduc~ #>  crayon                 1.5.3     2024-06-20 [1] RSPM #>  curl                   6.2.2     2025-03-24 [1] RSPM #>  data.table             1.17.0    2025-02-22 [1] RSPM #>  DataEditR              0.1.5     2022-03-08 [1] RSPM #>  DBI                    1.2.3     2024-06-02 [1] RSPM #>  DelayedArray           0.32.0    2024-10-29 [1] Bioconduc~ #>  DelayedMatrixStats     1.28.1    2025-01-09 [1] Bioconduc~ #>  desc                   1.4.3     2023-12-10 [1] RSPM #>  digest                 0.6.37    2024-08-19 [1] RSPM #>  doParallel             1.0.17    2022-02-07 [1] RSPM #>  dplyr                  1.1.4     2023-11-17 [1] RSPM #>  dqrng                  0.4.1     2024-05-28 [1] RSPM #>  DT                     0.33      2024-04-04 [1] RSPM #>  edgeR                  4.4.2     2025-01-27 [1] Bioconduc~ #>  EnhancedVolcano        1.24.0    2024-10-29 [1] Bioconduc~ #>  EnsDb.Hsapiens.v86     2.99.0    2025-04-01 [1] Bioconductor #>  ensembldb              2.30.0    2024-10-29 [1] Bioconduc~ #>  evaluate               1.0.3     2025-01-10 [1] RSPM #>  farver                 2.1.2     2024-05-13 [1] RSPM #>  fastmap                1.2.0     2024-05-15 [1] RSPM #>  forcats                1.0.0     2023-01-29 [1] RSPM #>  foreach                1.5.2     2022-02-02 [1] RSPM #>  fs                     1.6.5     2024-10-30 [1] RSPM #>  future                 1.34.0    2024-07-29 [1] RSPM #>  generics               0.1.3     2022-07-05 [1] RSPM #>  GenomeInfoDb         * 1.42.3    2025-01-27 [1] Bioconduc~ #>  GenomeInfoDbData       1.2.13    2025-04-01 [1] Bioconductor #>  GenomicAlignments      1.42.0    2024-10-29 [1] Bioconduc~ #>  GenomicFeatures        1.58.0    2024-10-29 [1] Bioconduc~ #>  GenomicRanges        * 1.58.0    2024-10-29 [1] Bioconduc~ #>  GetoptLong             1.0.5     2020-12-15 [1] RSPM #>  ggbeeswarm             0.7.2     2023-04-29 [1] RSPM #>  ggforce                0.4.2     2024-02-19 [1] RSPM #>  ggplot2              * 3.5.1     2024-04-23 [1] RSPM #>  ggplotify              0.1.2     2023-08-09 [1] RSPM #>  ggraph               * 2.2.1     2024-03-07 [1] RSPM #>  ggrepel                0.9.6     2024-09-07 [1] RSPM #>  GlobalOptions          0.1.2     2020-06-10 [1] RSPM #>  globals                0.16.3    2024-03-08 [1] RSPM #>  glue                   1.8.0     2024-09-30 [1] RSPM #>  graphlayouts           1.2.2     2025-01-23 [1] RSPM #>  gridExtra              2.3       2017-09-09 [1] RSPM #>  gridGraphics           0.5-1     2020-12-13 [1] RSPM #>  gtable                 0.3.6     2024-10-25 [1] RSPM #>  hms                    1.1.3     2023-03-21 [1] RSPM #>  htmltools              0.5.8.1   2024-04-04 [1] RSPM #>  htmlwidgets            1.6.4     2023-12-06 [1] RSPM #>  httpuv                 1.6.15    2024-03-26 [1] RSPM #>  httr                   1.4.7     2023-08-15 [1] RSPM #>  igraph                 2.1.4     2025-01-23 [1] RSPM #>  IRanges              * 2.40.1    2024-12-05 [1] Bioconduc~ #>  irlba                  2.3.5.1   2022-10-03 [1] RSPM #>  iterators              1.0.14    2022-02-05 [1] RSPM #>  jquerylib              0.1.4     2021-04-26 [1] RSPM #>  jsonlite               2.0.0     2025-03-27 [1] RSPM #>  KEGGREST               1.46.0    2024-10-29 [1] Bioconduc~ #>  knitr                  1.50      2025-03-16 [1] RSPM #>  later                  1.4.1     2024-11-27 [1] RSPM #>  lattice                0.22-6    2024-03-20 [3] CRAN (R 4.4.3) #>  lazyeval               0.2.2     2019-03-15 [1] RSPM #>  lifecycle              1.0.4     2023-11-07 [1] RSPM #>  limma                  3.62.2    2025-01-09 [1] Bioconduc~ #>  listenv                0.9.1     2024-01-29 [1] RSPM #>  locfit                 1.5-9.12  2025-03-05 [1] RSPM #>  magrittr               2.0.3     2022-03-30 [1] RSPM #>  MASS                   7.3-64    2025-01-04 [3] CRAN (R 4.4.3) #>  Matrix                 1.7-2     2025-01-23 [3] CRAN (R 4.4.3) #>  MatrixGenerics       * 1.18.1    2025-01-09 [1] Bioconduc~ #>  matrixStats          * 1.5.0     2025-01-07 [1] RSPM #>  megadepth              1.16.0    2024-10-29 [1] Bioconduc~ #>  memoise                2.0.1     2021-11-26 [1] RSPM #>  metapod                1.14.0    2024-10-29 [1] Bioconduc~ #>  mime                   0.13      2025-03-17 [1] RSPM #>  miniUI                 0.1.1.1   2018-05-18 [1] RSPM #>  munsell                0.5.1     2024-04-01 [1] RSPM #>  parallelly             1.43.0    2025-03-24 [1] RSPM #>  patchwork              1.3.0     2024-09-16 [1] RSPM #>  pillar                 1.10.1    2025-01-07 [1] RSPM #>  pkgconfig              2.0.3     2019-09-22 [1] RSPM #>  pkgdown                2.1.1     2024-09-17 [1] any (@2.1.1) #>  plotly                 4.10.4    2024-01-13 [1] RSPM #>  png                    0.1-8     2022-11-29 [1] RSPM #>  polyclip               1.10-7    2024-07-23 [1] RSPM #>  promises               1.3.2     2024-11-28 [1] RSPM #>  ProtGenerics           1.38.0    2024-10-29 [1] Bioconduc~ #>  purrr                  1.0.4     2025-02-05 [1] RSPM #>  R6                     2.6.1     2025-02-15 [1] RSPM #>  ragg                   1.3.3     2024-09-11 [1] RSPM #>  rappdirs               0.3.3     2021-01-31 [1] RSPM #>  RColorBrewer           1.1-3     2022-04-03 [1] RSPM #>  Rcpp                   1.0.14    2025-01-12 [1] RSPM #>  RCurl                  1.98-1.17 2025-03-22 [1] RSPM #>  readr                  2.1.5     2024-01-10 [1] RSPM #>  ResidualMatrix         1.16.0    2024-10-29 [1] Bioconduc~ #>  restfulr               0.0.15    2022-06-16 [1] RSPM #>  rhandsontable          0.3.8     2021-05-27 [1] RSPM #>  rhdf5                  2.50.2    2025-01-09 [1] Bioconduc~ #>  rhdf5filters           1.18.1    2025-03-06 [1] Bioconduc~ #>  Rhdf5lib               1.28.0    2024-10-29 [1] Bioconduc~ #>  rjson                  0.2.23    2024-09-16 [1] RSPM #>  rlang                  1.1.5     2025-01-17 [1] RSPM #>  rmarkdown              2.29      2024-11-04 [1] RSPM #>  Rsamtools              2.22.0    2024-10-29 [1] Bioconduc~ #>  RSQLite                2.3.9     2024-12-03 [1] RSPM #>  rstudioapi             0.17.1    2024-10-22 [1] RSPM #>  rsvd                   1.0.5     2021-04-16 [1] RSPM #>  rtracklayer            1.66.0    2024-10-29 [1] Bioconduc~ #>  S4Arrays               1.6.0     2024-10-29 [1] Bioconduc~ #>  S4Vectors            * 0.44.0    2024-10-29 [1] Bioconduc~ #>  sass                   0.4.9     2024-03-15 [1] RSPM #>  ScaledMatrix           1.14.0    2024-10-29 [1] Bioconduc~ #>  scales                 1.3.0     2023-11-28 [1] RSPM #>  scater               * 1.34.1    2025-03-03 [1] Bioconduc~ #>  scran                  1.34.0    2024-10-29 [1] Bioconduc~ #>  scuttle              * 1.16.0    2024-10-29 [1] Bioconduc~ #>  sessioninfo          * 1.2.3     2025-02-05 [1] any (@1.2.3) #>  shape                  1.4.6.1   2024-02-23 [1] RSPM #>  shiny                * 1.10.0    2024-12-14 [1] RSPM #>  shinyBS                0.61.1    2022-04-17 [1] RSPM #>  shinydashboard       * 0.7.2     2021-09-30 [1] RSPM #>  shinyFiles             0.9.3     2022-08-19 [1] RSPM #>  shinyhelper            0.3.2     2019-11-09 [1] RSPM #>  shinyjs                2.1.0     2021-12-23 [1] RSPM #>  shinyWidgets           0.9.0     2025-02-21 [1] RSPM #>  SingleCellExperiment * 1.28.1    2024-11-10 [1] Bioconduc~ #>  SparseArray            1.6.2     2025-02-20 [1] Bioconduc~ #>  sparseMatrixStats      1.18.0    2024-10-29 [1] Bioconduc~ #>  statmod                1.5.0     2023-01-06 [1] RSPM #>  stringi                1.8.7     2025-03-27 [1] RSPM #>  stringr                1.5.1     2023-11-14 [1] RSPM #>  SummarizedExperiment * 1.36.0    2024-10-29 [1] Bioconduc~ #>  systemfonts            1.2.1     2025-01-20 [1] RSPM #>  textshaping            1.0.0     2025-01-20 [1] RSPM #>  tibble                 3.2.1     2023-03-20 [1] RSPM #>  tidygraph              1.3.1     2024-01-30 [1] RSPM #>  tidyr                  1.3.1     2024-01-24 [1] RSPM #>  tidyselect             1.2.1     2024-03-11 [1] RSPM #>  tweenr                 2.0.3     2024-02-26 [1] RSPM #>  tzdb                   0.5.0     2025-03-15 [1] RSPM #>  UCSC.utils             1.2.0     2024-10-29 [1] Bioconduc~ #>  vctrs                  0.6.5     2023-12-01 [1] RSPM #>  vipor                  0.4.7     2023-12-18 [1] RSPM #>  viridis                0.6.5     2024-01-29 [1] RSPM #>  viridisLite            0.4.2     2023-05-02 [1] RSPM #>  waiter                 0.2.5     2022-01-03 [1] RSPM #>  wiggleplotr            1.30.0    2024-10-29 [1] Bioconduc~ #>  withr                  3.0.2     2024-10-28 [1] RSPM #>  xfun                   0.51      2025-02-19 [1] RSPM #>  XML                    3.99-0.18 2025-01-01 [1] RSPM #>  xtable                 1.8-4     2019-04-21 [1] RSPM #>  XVector                0.46.0    2024-10-29 [1] Bioconduc~ #>  yaml                   2.3.10    2024-07-26 [1] RSPM #>  yulab.utils            0.2.0     2025-01-29 [1] RSPM #>  zlibbioc               1.52.0    2024-10-29 [1] Bioconduc~ #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.4.3/lib/R/site-library #>  [3] /opt/R/4.4.3/lib/R/library #>  * ── Packages attached to the search path. #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"reformat-metadata","dir":"Articles","previous_headings":"","what":"Reformat Metadata","title":"Shiny App","text":"Arbitrary variables can appended cell metadata based results exploratory data analysis. Metadata addition can executed uploading csv row names matching cell ids new variables columns. Metadata editing can also accomplished using built-spreadsheet tool.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"dimensional-reduction-plots","dir":"Articles","previous_headings":"Plot Data","what":"Dimensional reduction plots","title":"Shiny App","text":"chevreulShiny provides visualization embeddings PCA, tSNE, UMAP scRNAseq data summarized gene transcript level. Plots can customized display cell metadata results community detection clustering Louvain Leiden algorithms implemented SingleCellExperiment. addition, gene transcript feature expression can overlaid embedding plots gene transcript level.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"readumi-count-histograms","dir":"Articles","previous_headings":"Plot Data","what":"read/UMI count histograms","title":"Shiny App","text":"facilitate quality control, cell-level summarized UMI read count values can also overlaid cell metadata clustering results.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"clustering-trees","dir":"Articles","previous_headings":"Plot Data","what":"Clustering trees","title":"Shiny App","text":"cluster tree cell identities displayed using scclustviz. plot can used help establish optimal clustering resolution. order use function library(clustree) must loaded.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"heat-maps","dir":"Articles","previous_headings":"Heat Maps/Violin Plots","what":"Heat Maps","title":"Shiny App","text":"plotting heat map, gene/transcript expression values cell normalized cell’s total expression multiplied 10,000 natural-log transformed plotting. Clustering model metadata column arrangement taken parameter produce complex heat map. default, 50 highly variable genes displayed. However, arbitrary lists genes can plotted comparison. genes/transcripts displayed order listed.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"violin-plots","dir":"Articles","previous_headings":"Heat Maps/Violin Plots","what":"Violin Plots","title":"Shiny App","text":"Feature (gene transcript) expression can viewed violin plot based sample metadata Violin plots hybrid density box plots. shows probability density data different values providing visual representation distribution expression level feature different groups cell. horizontal line marker median data box shows interquartile ranges. parameters chosen : 1. ‘Grouping variable’ 2. ‘Data Type (Transformed/Raw)’","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"differential-expression","dir":"Articles","previous_headings":"","what":"Differential expression","title":"Shiny App","text":"chevreulShiny provides different methods differential expression analysis users can choose determine differential expression gene. DE methods included chevreulShiny t-test, Wilcoxon rank-sum test, pairwise binomial test. Running DE testing results data frame containing following information: * p_val : Unadjusted p-value * avg_log2FC : log fold-change average expression two groups. * pct.1 : percentage cells feature detected first group * pct.2 : percentage cells feature detected second group * p_val_adj : Adjusted p-value, based bonferroni correction using features dataset.","code":"d1 <- read.csv(\"Dominic.csv\", header = TRUE)"},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"volcano-plots","dir":"Articles","previous_headings":"Differential expression","what":"Volcano Plots","title":"Shiny App","text":"results differential expression analyses can visualized using volcano plot. plot helps visual identification genes large fold changes also statistically significant. ### Find Markers Marker features based louvain/leiden cluster identities cell metadata can defined based results wilcoxon rank-sum test. Variable numbers marker genes per cell group can specified based adjusted p value thresholded log fold change.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"subset-singlecellexperiment-input","dir":"Articles","previous_headings":"","what":"Subset SingleCellExperiment Input","title":"Shiny App","text":"often useful subset single cell data set based cell metadata whether experimentally determined (age, collection method, etc.) derived analysis (quality control metrics, annotated cell type) chevreulShiny makes simple subset dataset consisting single batch batch-integrated dataset. Subsetting can accomplished either graphical setting lasso-selection dimensionally reduced plot specification formatted .csv file. Subsetting single batch integrated data trigger renewal relevant preprocessing steps including dimensional reduction, clustering, marker gene, pathway enrichment well integration based ‘batch’ variable","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"all-transcripts","dir":"Articles","previous_headings":"","what":"All Transcripts","title":"Shiny App","text":"expression summarized gene transcript experiments, possible plot constituent transcripts (labeled ensembl transcript ids) making given gene. two parameters must chosen : dimensional reduction method: PCA, UMAP tSNE name gene interest  Direct comparison contribution individual transcripts can achieved using stacked bar plots answer question: contribution transcript make gene expression?","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"regress-features","dir":"Articles","previous_headings":"","what":"Regress Features","title":"Shiny App","text":"correct expression variation analysis due phenomena unrelated focus study, rather excluding count values attributable process, can adjust expression remaining genes transcripts cell based sum score relevant genes, regress cell-cycle effects.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"technical-information","dir":"Articles","previous_headings":"","what":"Technical information","title":"Shiny App","text":"Technical information regarding upstream processing, software version numbers, dataset features can viewed.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"server-mode","dir":"Articles","previous_headings":"","what":"Server Mode","title":"Shiny App","text":"want work objects interactively save results exploratory data analysis need operate chevreulShiny server mode. operating manner possible carry basic project management tasks including: * Loading saved objects * Saving objects making changes app : * Reformatting metadata * Subsetting remove cells * Regressing feature expression well * Integrating multiple saved objects Finally, server mode necessary expanded functionality including: * Coverage plotting server mode requires access sqlite databases file path details stored ~/.cache/chevreul. single_cell_projects.db bigwig_files.db allowing dynamic loading objects bigwig (.bw) sample coverage files cell. initialized upon package installation using creat_project_db function. following sections give details expanded functionality.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"integrate-projects","dir":"Articles","previous_headings":"Server Mode","what":"Integrate Projects","title":"Shiny App","text":"operating chevreulShiny server mode, separate sequencing batches can integrated compared validate sample processing steps exclude technical variation favor relevant biological variation.  section includes list projects can selected, integrated, saved future analysis.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"coverage-plots","dir":"Articles","previous_headings":"Server Mode","what":"Coverage plots","title":"Shiny App","text":"Fine-grained analysis isoform contributions can achieved plotting absolute read coverage plots across given gene. indicate **read depths across transcripts different groups cells within genomic region. three user input parameters : 1. ‘Select gene’- Select gene interest 2. ‘Color variable’- Select variable group cells 3. ‘Groups display’- Select groups displayed","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/articles/shiny_app.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Shiny App","text":"","code":"#> R version 4.4.3 (2025-02-28) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    #>  [6] LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C         #> [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] sessioninfo_1.2.3 BiocStyle_2.34.0  #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37       desc_1.4.3          R6_2.6.1            bookdown_0.42       fastmap_1.2.0       #>  [6] xfun_0.51           cachem_1.1.0        knitr_1.50          htmltools_0.5.8.1   rmarkdown_2.29      #> [11] lifecycle_1.0.4     cli_3.6.4           sass_0.4.9          pkgdown_2.1.1       textshaping_1.0.0   #> [16] jquerylib_0.1.4     systemfonts_1.2.1   compiler_4.4.3      tools_4.4.3         ragg_1.3.3          #> [21] evaluate_1.0.3      bslib_0.9.0         yaml_2.3.10         BiocManager_1.30.25 jsonlite_2.0.0      #> [26] rlang_1.1.5         fs_1.6.5            htmlwidgets_1.6.4"},{"path":"https://cobriniklab.github.io/chevreulShiny/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Stachelek. Author, maintainer. Bhavana Bhat. Author.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stachelek K, Bhat B (2025). chevreulShiny: Interactive exploratory data analysis full-length scRNA-seq SingleCellExperiments. R package version 0.99.26, https://cobriniklab.github.io/chevreulShiny/, https://github.com/cobriniklab/chevreulShiny.","code":"@Manual{,   title = {chevreulShiny: Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments},   author = {Kevin Stachelek and Bhavana Bhat},   year = {2025},   note = {R package version 0.99.26,     https://cobriniklab.github.io/chevreulShiny/},   url = {https://github.com/cobriniklab/chevreulShiny}, }"},{"path":"https://cobriniklab.github.io/chevreulShiny/index.html","id":"chevreulshiny","dir":"","previous_headings":"","what":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","title":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","text":"package includes set Shiny apps exploring single cell RNA datasets processed SingleCellExperiment demo using human gene transcript dataset Shayler et al. (link) available also convenient functions : Clustering Dimensional Reduction Raw Sequencing Data. Integration Label Transfer Louvain Clustering Range Resolutions Cell cycle state regression labeling [!WARNING] chevreulShiny designed full-length smart-seq based single cell data. Default settings may appropriate droplet (10x) data, though can adjusted. Keep mind best practices regarding normalization, dimensional reduction, etc. using.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","text":"can install released version chevreulShiny github :","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/index.html","id":"install-locally-and-run-in-three-steps","dir":"","previous_headings":"Installation","what":"Install locally and run in three steps:","title":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","text":"can install chevreulShiny locally using following steps: can also customize location app using steps:","code":"install.packages(\"devtools\") devtools::install_github(\"cobriniklab/chevreulShiny\") library(chevreulShiny) create_project_db() devtools::install_github(\"cobriniklab/chevreul\") library(chevreulShiny) create_project_db(destdir = \"/your/path/to/app\")"},{"path":"https://cobriniklab.github.io/chevreulShiny/index.html","id":"tldr","dir":"","previous_headings":"","what":"TLDR","title":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","text":"chevreulShiny provides single command : construct SingleCellExperiment object filter genes minimum expression ubiquity normalize scale expression several methods packaged SingleCellExperiment","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/index.html","id":"run-clustering-on-a-single-object","dir":"","previous_headings":"","what":"Run clustering on a single object","title":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","text":"default clustering run ten different resolutions 0.2 2.0. resolution can specified providing resolution argument numeric vector.","code":"clustered_sce <- sce_clustering_workflow(chevreul_sce,     experiment_name = \"sce_hu_trans\",     organism = \"human\" )"},{"path":"https://cobriniklab.github.io/chevreulShiny/index.html","id":"get-a-first-look-at-a-processed-dataset-using-an-interactive-shiny-app","dir":"","previous_headings":"","what":"Get a first look at a processed dataset using an interactive shiny app","title":"Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments","text":"","code":"minimalChevreulApp(chevreul_sce)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/append_to_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a database of chevreul projects — append_to_project_db","title":"Update a database of chevreul projects — append_to_project_db","text":"Append projects database","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/append_to_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a database of chevreul projects — append_to_project_db","text":"","code":"append_to_project_db(   new_project_path,   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/append_to_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a database of chevreul projects — append_to_project_db","text":"new_project_path new project path cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/append_to_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a database of chevreul projects — append_to_project_db","text":"sqlite database SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/cc.genes.cyclone.html","id":null,"dir":"Reference","previous_headings":"","what":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"cell cycle genes paired expression represented HGNC symbol","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/cc.genes.cyclone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"","code":"cc.genes.cyclone"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/cc.genes.cyclone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"list dataframes G1, G2, S gene expression G1 G1 gene symbols G2 G2 gene symbols S S gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/cc.genes.cyclone.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"cyclone","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/chevreulApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a shiny app for a project on disk — chevreulApp","title":"Create a shiny app for a project on disk — chevreulApp","text":"Create shiny app project disk","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/chevreulApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shiny app for a project on disk — chevreulApp","text":"","code":"chevreulApp(   preset_project,   appTitle = \"chevreul\",   organism_type = \"human\",   futureMb = 13000,   db_name = \"single-cell-projects.db\" )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/chevreulApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shiny app for a project on disk — chevreulApp","text":"preset_project preloaded project start app appTitle title App organism_type human mouse futureMb amount Mb allocated future package db_name sqlite database list saved SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/chevreulApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a shiny app for a project on disk — chevreulApp","text":"shiny app","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/chevreulShiny-package.html","id":null,"dir":"Reference","previous_headings":"","what":"chevreulShiny: Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments — chevreulShiny-package","title":"chevreulShiny: Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments — chevreulShiny-package","text":"Interactive exploratory data analysis full-length scRNA-seq SingleCellExperiments. Includes shiny app visualization pre-processed scRNA data. Supported NIH grants R01CA137124 R01EY026661 David Cobrinik.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/chevreulShiny-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"chevreulShiny: Interactive exploratory data analysis of full-length scRNA-seq as SingleCellExperiments — chevreulShiny-package","text":"Maintainer: Kevin Stachelek kevin.stachelek@gmail.com (ORCID) Authors: Bhavana Bhat bhavanabhat29@gmail.com","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_proj_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Table of single Cell Projects — create_proj_matrix","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"Uses list projects create matrix single cell projects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_proj_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"","code":"create_proj_matrix(proj_list)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_proj_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"proj_list List projects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_proj_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"tibble single cell projects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database of chevreul projects — create_project_db","title":"Create a database of chevreul projects — create_project_db","text":"Create database containing chevreul projects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database of chevreul projects — create_project_db","text":"","code":"create_project_db(   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database of chevreul projects — create_project_db","text":"cache_location Path cache \"~/.cache/chevreul\" sqlite_db Database created verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/create_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a database of chevreul projects — create_project_db","text":"sqlite database SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/ensembl_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl version used for build — ensembl_version","title":"Ensembl version used for build — ensembl_version","text":"Ensembl version used build","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/ensembl_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl version used for build — ensembl_version","text":"","code":"ensembl_version"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/ensembl_version.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ensembl version used for build — ensembl_version","text":"object class character length 1.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/ensembl_version.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ensembl version used for build — ensembl_version","text":"http://www.ensembl.org/","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/ensembl_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl version used for build — ensembl_version","text":"","code":"# ensembl_version"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/get_transcripts_from_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Transcripts in object — get_transcripts_from_sce","title":"Get Transcripts in object — get_transcripts_from_sce","text":"Get transcript ids objects one gene interest","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/get_transcripts_from_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Transcripts in object — get_transcripts_from_sce","text":"","code":"get_transcripts_from_sce(object, gene)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/get_transcripts_from_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Transcripts in object — get_transcripts_from_sce","text":"object SingleCellExperiment object gene Gene interest","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/get_transcripts_from_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Transcripts in object — get_transcripts_from_sce","text":"transcripts constituting gene interest SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38.html","id":null,"dir":"Reference","previous_headings":"","what":"Human annotation data — grch38","title":"Human annotation data — grch38","text":"Human (Homo sapiens) annotations based genome assembly GRCH38 Ensembl.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human annotation data — grch38","text":"","code":"grch38"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human annotation data — grch38","text":"object class tbl_df (inherits tbl, data.frame) 76062 rows 9 columns.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human annotation data — grch38","text":"http://ensembl.org/homo_sapiens","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Human annotation data — grch38","text":"Variables: ensgene entrez symbol chr start end strand biotype description","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Human annotation data — grch38","text":"","code":"data(\"grch38\") head(grch38) #> # A tibble: 6 × 9 #>   ensgene         entrez symbol chr      start    end strand biotype description #>   <chr>            <int> <chr>  <chr>    <int>  <int>  <int> <chr>   <chr>       #> 1 ENSG00000000003   7105 TSPAN6 X       1.01e8 1.01e8     -1 protei… tetraspani… #> 2 ENSG00000000005  64102 TNMD   X       1.01e8 1.01e8      1 protei… tenomodulin #> 3 ENSG00000000419   8813 DPM1   20      5.09e7 5.10e7     -1 protei… dolichyl-p… #> 4 ENSG00000000457  57147 SCYL3  1       1.70e8 1.70e8     -1 protei… SCY1 like … #> 5 ENSG00000000460  55732 FIRRM  1       1.70e8 1.70e8      1 protei… FIGNL1 int… #> 6 ENSG00000000938   2268 FGR    1       2.76e7 2.76e7     -1 protei… FGR proto-…"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38_tx2gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Human transcripts to genes — grch38_tx2gene","title":"Human transcripts to genes — grch38_tx2gene","text":"Lookup table converting Human (Homo sapiens) Ensembl transcript IDs gene IDs based genome assembly GRCH38 Ensembl.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38_tx2gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human transcripts to genes — grch38_tx2gene","text":"","code":"grch38_tx2gene"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38_tx2gene.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human transcripts to genes — grch38_tx2gene","text":"object class tbl_df (inherits tbl, data.frame) 277081 rows 2 columns.","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38_tx2gene.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human transcripts to genes — grch38_tx2gene","text":"http://ensembl.org/homo_sapiens","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38_tx2gene.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Human transcripts to genes — grch38_tx2gene","text":"Variables: enstxp ensgene","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/grch38_tx2gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Human transcripts to genes — grch38_tx2gene","text":"","code":"data(grch38_tx2gene) head(grch38_tx2gene) #> # A tibble: 6 × 2 #>   enstxp          ensgene         #>   <chr>           <chr>           #> 1 ENST00000373020 ENSG00000000003 #> 2 ENST00000612152 ENSG00000000003 #> 3 ENST00000496771 ENSG00000000003 #> 4 ENST00000494424 ENSG00000000003 #> 5 ENST00000373031 ENSG00000000005 #> 6 ENST00000485971 ENSG00000000005"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/human_to_mouse_homologs.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"Homologs drawn Biomart","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/human_to_mouse_homologs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"","code":"human_to_mouse_homologs"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/human_to_mouse_homologs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"data frame 23188 rows 2 columns HGNC.symbol human gene symbols MGI.symbol mouse gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/human_to_mouse_homologs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"bioMart","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/list_plot_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate list of variables to be plotted — list_plot_types","title":"Collate list of variables to be plotted — list_plot_types","text":"Collate list variables plotted","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/list_plot_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate list of variables to be plotted — list_plot_types","text":"","code":"list_plot_types(object)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/list_plot_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate list of variables to be plotted — list_plot_types","text":"object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/list_plot_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collate list of variables to be plotted — list_plot_types","text":"plot_types list category_vars continuous_vars","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/list_plot_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collate list of variables to be plotted — list_plot_types","text":"","code":"data(small_example_dataset) list_plot_types(small_example_dataset) #> $category_vars #>   Mutation Status        Cell Cycle         Treatment    Gene Snn Res.1  #> \"Mutation_Status\"      \"Cell_Cycle\"       \"Treatment\"  \"gene_snn_res.1\"  #>  #> $continuous_vars #>      Feature   Sizefactor  #>    \"feature\" \"sizeFactor\"  #>"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_from_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SingleCellExperiment Files from a single project path — load_alabaster_from_proj","title":"Load SingleCellExperiment Files from a single project path — load_alabaster_from_proj","text":"Load SingleCellExperiment Files single project path","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_from_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SingleCellExperiment Files from a single project path — load_alabaster_from_proj","text":"","code":"load_alabaster_from_proj(proj_dir, ...)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_from_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SingleCellExperiment Files from a single project path — load_alabaster_from_proj","text":"proj_dir project directory ... extra args passed load_alabaster_path","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_from_proj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SingleCellExperiment Files from a single project path — load_alabaster_from_proj","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in Gene and Transcript SingleCellExperiment Objects — load_alabaster_path","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_alabaster_path","text":"Read Gene Transcript SingleCellExperiment Objects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_alabaster_path","text":"","code":"load_alabaster_path(proj_dir = getwd(), prefix = \"unfiltered\")"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_alabaster_path","text":"proj_dir path project directory prefix default \"unfiltered\"","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_alabaster_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_alabaster_path","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_bigwigs.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Bigwigs — load_bigwigs","title":"Load Bigwigs — load_bigwigs","text":"Load tibble bigwig file paths cell id","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_bigwigs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Bigwigs — load_bigwigs","text":"","code":"load_bigwigs(object, bigwig_db = \"~/.cache/chevreul/bw-files.db\")"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_bigwigs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Bigwigs — load_bigwigs","text":"object object bigwig_db Sqlite database bigwig files","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/load_bigwigs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Bigwigs — load_bigwigs","text":"vector bigwigs file paths","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_bigwig_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Bigwig Database — make_bigwig_db","title":"Make Bigwig Database — make_bigwig_db","text":"Make Bigwig Database","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_bigwig_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Bigwig Database — make_bigwig_db","text":"","code":"make_bigwig_db(   new_project = NULL,   cache_location = \"~/.cache/chevreul/\",   sqlite_db = \"bw-files.db\" )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_bigwig_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Bigwig Database — make_bigwig_db","text":"new_project Project directory cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db containing bw files","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_bigwig_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Bigwig Database — make_bigwig_db","text":"sqlite database bigwig files cells SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_chevreul_clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Vector of Chevreul Names — make_chevreul_clean_names","title":"Clean Vector of Chevreul Names — make_chevreul_clean_names","text":"Cleans names objects provided vector form","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_chevreul_clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Vector of Chevreul Names — make_chevreul_clean_names","text":"","code":"make_chevreul_clean_names(myvec)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_chevreul_clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Vector of Chevreul Names — make_chevreul_clean_names","text":"myvec vector object names","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_chevreul_clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Vector of Chevreul Names — make_chevreul_clean_names","text":"clean vector object names","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/make_chevreul_clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Vector of Chevreul Names — make_chevreul_clean_names","text":"","code":"data(small_example_dataset) make_chevreul_clean_names(colnames( get_colData(small_example_dataset))) #>    Mutation Status         Cell Cycle          Treatment         Sizefactor  #>  \"Mutation_Status\"       \"Cell_Cycle\"        \"Treatment\"       \"sizeFactor\"  #>   Gene Snn Res.0.2   Gene Snn Res.0.4   Gene Snn Res.0.6   Gene Snn Res.0.8  #> \"gene_snn_res.0.2\" \"gene_snn_res.0.4\" \"gene_snn_res.0.6\" \"gene_snn_res.0.8\"  #>     Gene Snn Res.1  #>   \"gene_snn_res.1\""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/metadata_from_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Metadata from Batch — metadata_from_batch","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"Retrieve Metadata Batch","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/metadata_from_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"","code":"metadata_from_batch(   batch,   projects_dir = \"/dataVolume/storage/single_cell_projects\",   db_path = \"single-cell-projects.db\" )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/metadata_from_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"batch batch projects_dir path project dir db_path path .db file","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/metadata_from_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"tibble cell level metadata SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/minimalChevreulApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a minimal chevreulShiny app using SingleCellExperiment input — minimalChevreulApp","title":"Create a minimal chevreulShiny app using SingleCellExperiment input — minimalChevreulApp","text":"Create minimal chevreulShiny app using SingleCellExperiment input","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/minimalChevreulApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a minimal chevreulShiny app using SingleCellExperiment input — minimalChevreulApp","text":"","code":"minimalChevreulApp(   single_cell_sce = NULL,   appTitle = NULL,   organism_type = \"human\",   futureMb = 13000,   db_name = \"single-cell-projects.db\" )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/minimalChevreulApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a minimal chevreulShiny app using SingleCellExperiment input — minimalChevreulApp","text":"single_cell_sce singlecell object appTitle title app organism_type human mouse futureMb megabytes available future package db_name database bigwig files","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/minimalChevreulApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a minimal chevreulShiny app using SingleCellExperiment input — minimalChevreulApp","text":"minimal chevreulShiny app","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/minimalChevreulApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a minimal chevreulShiny app using SingleCellExperiment input — minimalChevreulApp","text":"","code":"if (interactive() ) {   data(\"tiny_sce\")   minimalChevreulApp(tiny_sce) }"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plot_gene_coverage_by_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"Plot BigWig coverage genes interest colored given variable","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plot_gene_coverage_by_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"","code":"plot_gene_coverage_by_var(   genes_of_interest = \"NRL\",   cell_metadata,   bigwig_tbl,   group_by = \"batch\",   values_of_interest = NULL,   organism = c(\"human\", \"mouse\"),   edb = NULL,   heights = c(3, 1),   scale_y = \"log10\",   reverse_x = FALSE,   start = NULL,   end = NULL,   summarize_transcripts = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plot_gene_coverage_by_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"genes_of_interest Gene interest cell_metadata dataframe cell metadata object bigwig_tbl tibble colnames \"name\", \"bigWig\", \"sample_id\" matching filename, absolute path, sample name cell cell_metadata group_by Variable color values_of_interest values interest organism human (default) mouse edb ensembldb object heights heights row grid plot scale_y whether scale coverage reverse_x whether reverse x axis start start coordinates end end coordinates summarize_transcripts whether summarize transcript counts ... extra arguments passed plotCoverageFromEnsembldb","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plot_gene_coverage_by_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"ggplot coverage faceted group_by","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plotly_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotly settings — plotly_settings","title":"Plotly settings — plotly_settings","text":"Change settings plotly plot","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plotly_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotly settings — plotly_settings","text":"","code":"plotly_settings(plotly_plot, width = 600, height = 700)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plotly_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotly settings — plotly_settings","text":"plotly_plot plotly plot width Default set '600' height Default set '700'","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/plotly_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotly settings — plotly_settings","text":"plotly plot settings changed","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/read_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a database of chevreul projects — read_project_db","title":"Read a database of chevreul projects — read_project_db","text":"Reads database chevreul projects data frame","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/read_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a database of chevreul projects — read_project_db","text":"","code":"read_project_db(   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/read_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a database of chevreul projects — read_project_db","text":"cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/read_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a database of chevreul projects — read_project_db","text":"tibble SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/save_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Save object to /output/sce/_sce.rds — save_sce","title":"Save object to /output/sce/_sce.rds — save_sce","text":"Save object /output/sce/_sce.rds","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/save_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save object to /output/sce/_sce.rds — save_sce","text":"","code":"save_sce(object, prefix = \"unfiltered\", proj_dir = getwd())"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/save_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save object to /output/sce/_sce.rds — save_sce","text":"object SingleCellExperiment object prefix prefix saving proj_dir path project directory","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/save_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save object to /output/sce/_sce.rds — save_sce","text":"path rds file containing SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/small_example_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Small example SingleCellExperiment — small_example_dataset","title":"Small example SingleCellExperiment — small_example_dataset","text":"created scuttle::mockSCE","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/small_example_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small example SingleCellExperiment — small_example_dataset","text":"","code":"small_example_dataset"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/small_example_dataset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Small example SingleCellExperiment — small_example_dataset","text":"SCE 200 cells 1000 genes","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/small_example_dataset.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Small example SingleCellExperiment — small_example_dataset","text":"scuttle::mockSCE","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/subset_by_colData.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset by new colData — subset_by_colData","title":"Subset by new colData — subset_by_colData","text":"Subset object using new colData","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/subset_by_colData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset by new colData — subset_by_colData","text":"","code":"subset_by_colData(colData_path, object)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/subset_by_colData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset by new colData — subset_by_colData","text":"colData_path Path new colData object object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/subset_by_colData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset by new colData — subset_by_colData","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/tiny_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Tiny example SingleCellExperiment — tiny_sce","title":"Tiny example SingleCellExperiment — tiny_sce","text":"subset NRL chevreuldata::human_gene_transcript_sce()","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/tiny_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tiny example SingleCellExperiment — tiny_sce","text":"","code":"tiny_sce"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/tiny_sce.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tiny example SingleCellExperiment — tiny_sce","text":"SCE expression NRL gene NRL transripts","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/tiny_sce.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tiny example SingleCellExperiment — tiny_sce","text":"chevreuldata::human_gene_transcript_sce()","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/unite_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite metadata — unite_metadata","title":"Unite metadata — unite_metadata","text":"Unite metadata","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/unite_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite metadata — unite_metadata","text":"","code":"unite_metadata(object, group_bys)"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/unite_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite metadata — unite_metadata","text":"object SingleCellExperiment object group_bys feature variable combine","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/unite_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unite metadata — unite_metadata","text":"SingleCellExperiment object Idents formed concatenation group_bys","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/unite_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unite metadata — unite_metadata","text":"","code":"data(small_example_dataset) unite_metadata(small_example_dataset, \"Mutation_Status\") #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(9): Mutation_Status Cell_Cycle ... gene_snn_res.0.8 #>   gene_snn_res.1 #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/update_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a database of chevreul projects — update_project_db","title":"Update a database of chevreul projects — update_project_db","text":"Add new/update existing projects database recursing fully","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/update_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a database of chevreul projects — update_project_db","text":"","code":"update_project_db(   projects_dir = NULL,   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/update_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a database of chevreul projects — update_project_db","text":"projects_dir project directory updated cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulShiny/reference/update_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a database of chevreul projects — update_project_db","text":"sqlite database SingleCellExperiment objects","code":""}]
